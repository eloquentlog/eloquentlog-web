stages:
  - verify
  - test
  - build
  - deploy

.gentoo: &gentoo
  image: registry.gitlab.com/grauwoelfchen/portolan/gentoo-amd64-nomultilib:latest

.nodejs: &nodejs
  image: node:12.16.1
  cache:
    paths:
      - node_modules
  before_script:
    - node --version
    - npm --version
    - npm install

.sqlite:
  - &sqlite
    if [ ! -d ".sqlite" ]; then
      mkdir -p .sqlite/{include,lib/pkgconfig};
      USE="readline secure-delete"
        emerge --quiet-build=y --nospinner --oneshot dev-db/sqlite:3;
      cp -R /usr/include/sqlite3ext.h .sqlite/include/;
      cp -R /usr/include/sqlite3.h .sqlite/include/;
      cp -R /usr/lib64/libsqlite* .sqlite/lib/;
      cp -R /usr/lib64/pkgconfig/sqlite3.pc .sqlite/lib/pkgconfig/;
      cp /usr/bin/sqlite3 .sqlite/sqlite3;
    else
      cp -R .sqlite/sqlite3 /usr/bin/sqlite3;
      cp -R .sqlite/lib/pkgconfig/* /usr/lib64/pkgconfig/;
      cp -R .sqlite/lib/libsqlite* /usr/lib64/;
      cp -R .sqlite/include/* /usr/include/;
      rm -fr /etc/ld.so.cache;
      ldconfig;
    fi

.python:
  - &python
    if [ ! -d ".python" ]; then
      mkdir -p .python/{include,lib/pkgconfig,lib64};
      USE="readline sqlite ssl xml"
        emerge --quiet-build=y --nospinner --oneshot dev-lang/python:2.7;
      cp -R /usr/include/python2.7/ .python/include;
      cp -R /usr/lib64/python2.7/ .python/lib64;
      cp -R /usr/lib64/pkgconfig/python-2.7.pc .python/lib/pkgconfig/;
      cp -R /usr/lib/python-exec/ .python/lib/python-exec;
      cp /usr/bin/python2.7 .python/python2.7;
    else
      cp -R .python/python2.7 /usr/bin/python2.7;
      cp -R .python/lib/pkgconfig/* /usr/lib64/pkgconfig/;
      cp -R .python/lib64/ /usr/lib64/python2.7;
      cp -R .python/lib/python-exec/ /user/lib/python-exec;
      cp -R .python/include/ /user/include/python2.7;
      rm -fr /etc/ld.so.cache;
      ldconfig;
    fi

.cloud-sdk:
  - &cloud-sdk
    export CLOUDSDK_PYTHON=python2.7;
    mkdir -p .tool;
    cd .tool;
    if [ ! -d "../.cloud-sdk" ]; then
      mkdir -p ../.cloud-sdk;
      curl -O $CLOUD_SDK_BASE_URL/$CLOUD_SDK_FILENAME;
      echo "${CLOUD_SDK_CHECKSUM}" "" ./$CLOUD_SDK_FILENAME | sha256sum -c -;
      cp $CLOUD_SDK_FILENAME ../.cloud-sdk/;
    else
      cp ../.cloud-sdk/$CLOUD_SDK_FILENAME .;
    fi;
    tar zxf $CLOUD_SDK_FILENAME;
    ./$CLOUD_SDK_ARTIFACT/install.sh
      --command-completion=false
      --path-update=false
      --usage-reporting=false
      --rc-path=/dev/null
      --override-components beta core
      --quiet >$CLOUD_SDK_ARTIFACT/install.log 2>&1;
    cd ../

# verify {{{
tslint:
  stage: verify
  <<: *nodejs
  variables:
    NODE_ENV: development
  script:
    - make verify:lint:ts
  except:
    - tags

stylint:
  stage: verify
  <<: *nodejs
  variables:
    NODE_ENV: development
  script:
    - make verify:lint:styl
  except:
    - tags
# }}}

# test {{{
test:
  stage: test
  <<: *nodejs
  variables:
    NODE_ENV: development
  script:
    - make test
  except:
    - tags
# }}}

# build {{{
build-debug:
  stage: build
  <<: *nodejs
  variables:
    NODE_ENV: development
  script:
    - cp config.json.sample config.json
    - make build:development

build-release:
  stage: build
  <<: *nodejs
  variables:
    NODE_ENV: production
  script:
    - cp $CONFIG_JSON_FILE config.json
    - make build:production
    - sed -i 's/index/index.min/' dst/index.html
  artifacts:
    paths:
      - dst
    expire_in: 3 days
  only:
    - release@eloquentlog/eloquentlog-web-console
    - tags@eloquentlog/eloquentlog-web-console
# }}}

# deploy {{{
release:
  stage: deploy
  <<: *gentoo
  variables:
    CLOUD_SDK_BASE_URL: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads
    CLOUD_SDK_CHECKSUM: 4773911e9f8fb7fe3b915e1f24ebe957436474253688820a9f2990d7399bd3b8
    CLOUD_SDK_ARTIFACT: google-cloud-sdk
    CLOUD_SDK_FILENAME: ${CLOUD_SDK_ARTIFACT}-301.0.0-linux-x86_64.tar.gz
    # set as secret variables
    # GCP_CREDENTIAL_JSON: /path/to/credential.json
    # GCP_PROJECT_ID: eloquentlog
    # GCP_APP_YAML: /path/to/app.yaml
    # GCP_DOTIGNORE: /path/to/.gcloudignore
  before_script:
    - *sqlite
    - *python
    - *cloud-sdk
  script:
    - export CLOUDSDK_PYTHON=python2.7
    - export CLOUDSDK_CORE_PROJECT=$GCP_PROJECT_ID
    - source .tool/$CLOUD_SDK_ARTIFACT/path.bash.inc
    - gcloud auth activate-service-account --key-file=$GCP_CREDENTIAL_JSON
      >/dev/null 2>&1
    - cp $GCP_APP_YAML app.yaml
    - cp $GCP_DOTIGNORE .gcloudignore
    - gcloud app deploy
  only:
    - release@eloquentlog/eloquentlog-web-console
    - tags@eloquentlog/eloquentlog-web-console
  # DEBUG
  # arfitacts:
  #   paths:
  #     - $CLOUD_SDK_ARTIFACT
  #   expire_in: 1 day
  cache:
    key: release
    paths:
      - .cloud-sdk
      - .python
      - .sqlite
# }}}
